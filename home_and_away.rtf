{\rtf1\ansi\ansicpg1252\cocoartf1561\cocoasubrtf610
{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;\red47\green50\blue64;\red255\green255\blue255;}
{\*\expandedcolortbl;;\cssrgb\c23922\c25882\c31765;\cssrgb\c100000\c100000\c100000;}
\margl1440\margr1440\vieww11480\viewh10240\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\fs28 \cf0 /* 
\i\fs32 \cf2 \cb3 \expnd0\expndtw0\kerning0
How do you get both the home and away team names into one final query result? \
There are three ways to do this. \
\
The first method will use nested subqueries: *
\i0\fs28 \cf0 \cb1 \kerning1\expnd0\expndtw0 /
\i\fs32 \cf2 \cb3 \expnd0\expndtw0\kerning0
\

\i0\fs28 \cf0 \cb1 \kerning1\expnd0\expndtw0 \
\
SELECT\
	m.date, \
-- both the home and away team names, and respective goal counts\
	hometeam,\
	awayteam,\
    	m.home_goal,\
    	m.away_goal\
FROM match AS m\
\
-- Join the home subquery to the match table\
LEFT JOIN (\
  		SELECT match.id, team.team_long_name AS hometeam\
  		FROM match\
 		LEFT JOIN team\
  		ON match.hometeam_id = team.team_api_id) \
	AS home\
	ON home.id = m.id\
\
/* ^ just inner joined home and match. \
Now we need to join the away subquery to this inner joined table */\
\
-- Join the away subquery to the match table\
LEFT JOIN (\
  		SELECT match.id, team.team_long_name AS awayteam\
  		FROM match\
  		LEFT JOIN team\
		ON match.awayteam_id = team.team_api_id)\
	AS away  -- Get the away team ID in the subquery\
	ON away.id = m.id;\
\
\
\

\i\fs32 \cf2 \cb3 \expnd0\expndtw0\kerning0
\
/* The second method will use correlated subqueries:  (simpler, but slower) *
\i0\fs28 \cf0 \cb1 \kerning1\expnd0\expndtw0 /\
\
SELECT\
    m.date,\
    (SELECT team_long_name\
     FROM team AS t\
     WHERE t.team_api_id = m.hometeam_id) AS hometeam,\
    -- Connect the team to the match table\
    (SELECT team_long_name\
     FROM team AS t\
     WHERE t.team_api_id = m.awayteam_id) AS awayteam,\
    -- Select home and away goals\
     home_goal,\
     away_goal\
FROM match AS m;\
\
\

\i\fs32 \cf2 \cb3 \expnd0\expndtw0\kerning0
/* The third method will use CTEs:   *
\i0\fs28 \cf0 \cb1 \kerning1\expnd0\expndtw0 /\
\
WITH home AS (\
  SELECT m.id, m.date, \
  		 t.team_long_name AS hometeam, m.home_goal\
  FROM match AS m\
  LEFT JOIN team AS t \
  ON m.hometeam_id = t.team_api_id),\
\
-- Declare and set up the away CTE\
away AS (\
  SELECT m.id, m.date, \
  	        t.team_long_name AS awayteam, \
  	        m.away_goal\
  FROM match AS m\
  LEFT JOIN team AS t \
  ON m.awayteam_id = t.team_api_id)\
\
-- Select date, home_goal, and away_goal\
SELECT \
    home.date,\
    home.hometeam,\
    away.awayteam,\
    home.home_goal,\
    away.away_goal\
FROM home\
\
-- Join away and home on the id column\
INNER JOIN away\
ON home.id = away.id;\
\
\
\
}